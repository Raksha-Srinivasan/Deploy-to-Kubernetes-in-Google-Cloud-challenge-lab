Perform Foundational Infrastructure Tasks in Google Cloud - Challenge Lab


TASK 1 - Create a bucket

#Steps to be followed

Navigation menu -> STORAGE -> Storage -> Create Bucket
Name your bucket -> "Enter your GCP Project ID" -> Click Continue
Choose where to store your data -> Region: us-east1 -> Click Continue
Leave the remaining as default then Click "Create"


TASK 2 - Create a Pub/Sub topic


#steps to be followed

Navigation menu -> BIG DATA -> Pub/Sub
Create Topic -> Topic I'd:"Any name" -> Create Topic


TASK 3 - Create the Cloud Function

Navigation menu -> COMPUTE -> Cloud Functions- > Create Function


Function Name: "cloudfunc" -> Region: "us-east1" -> Trigger: "Cloud Storage" -> Event type: "Finalize/Create" -> Bucket: BROWSE > Select the qwiklabs bucket -> "Save"

Remaining leave as default -> Then Click "Next"

Runtime: Node.js 14 Entry point: thumbnail

Add and Modify the given code to index.js and package.json approprietly .

"index.js"

/* globals exports, require */
//jshint strict: false
//jshint esversion: 6
"use strict";
const crc32 = require("fast-crc32c");
const { Storage } = require('@google-cloud/storage');
const gcs = new Storage();
const { PubSub } = require('@google-cloud/pubsub');
const imagemagick = require("imagemagick-stream");
exports.thumbnail = (event, context) => {
  const fileName = event.name;
  const bucketName = event.bucket;
  const size = "64x64"
  const bucket = gcs.bucket(bucketName);
  const topicName = "REPLACE_WITH_YOUR_TOPIC ID";                   #//"Replace your Topic I'd with the Topic ID you created in task 2"
  const pubsub = new PubSub();
  if ( fileName.search("64x64_thumbnail") == -1 ){
    // doesn't have a thumbnail, get the filename extension
    var filename_split = fileName.split('.');
    var filename_ext = filename_split[filename_split.length - 1];
    var filename_without_ext = fileName.substring(0, fileName.length - filename_ext.length );
    if (filename_ext.toLowerCase() == 'png' || filename_ext.toLowerCase() == 'jpg'){
      // only support png and jpg at this point
      console.log(`Processing Original: gs://${bucketName}/${fileName}`);
      const gcsObject = bucket.file(fileName);
      let newFilename = filename_without_ext + size + '_thumbnail.' + filename_ext;
      let gcsNewObject = bucket.file(newFilename);
      let srcStream = gcsObject.createReadStream();
      let dstStream = gcsNewObject.createWriteStream();
      let resize = imagemagick().resize(size).quality(90);
      srcStream.pipe(resize).pipe(dstStream);
      return new Promise((resolve, reject) => {
        dstStream
          .on("error", (err) => {
            console.log(`Error: ${err}`);
            reject(err);
          })
          .on("finish", () => {
            console.log(`Success: ${fileName} â†’ ${newFilename}`);
              // set the content-type
              gcsNewObject.setMetadata(
              {
                contentType: 'image/'+ filename_ext.toLowerCase()
              }, function(err, apiResponse) {});
              pubsub
                .topic(topicName)
                .publisher()
                .publish(Buffer.from(newFilename))
                .then(messageId => {
                  console.log(`Message ${messageId} published.`);
                })
                .catch(err => {
                  console.error('ERROR:', err);
                });
          });
      });
    }
    else {
      console.log(`gs://${bucketName}/${fileName} is not an image I can handle`);
    }
  }
  else {
    console.log(`gs://${bucketName}/${fileName} already has a thumbnail`);
  }
};



"package.json"


{
  "name": "thumbnails",
  "version": "1.0.0",
  "description": "Create Thumbnail of uploaded image",
  "scripts": {
    "start": "node index.js"
  },
  "dependencies": {
    "@google-cloud/functions-framework": "^1.1.1",
    "@google-cloud/pubsub": "^2.0.0",
    "@google-cloud/storage": "^5.0.0",
    "fast-crc32c": "1.0.4",
    "imagemagick-stream": "4.1.1"
  },
  "devDependencies": {},
  "engines": {
    "node": ">=4.3.2"
  }
}

After modifying the files Click "DEPLOY"

Download the image from URL(https://storage.googleapis.com/cloud-training/gsp315/map.jpg)

Go to Navigation menu -> STORAGE -> Storage -> Select the bucket which you have created -> Upload files --> Upload the downloaded image as "map.jpg" and "Refresh your bucket"


TASK 4 - Remove the previous cloud engineer

Navigation menu -> IAM & Admin
Search for the "Username 2" -> click on Edit Icon -> Delete Role 
